version: '3'
services:
  backend:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - ./src:/usr/src/app/src
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=db
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=subway_system
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: sh -c "if [ \"$NODE_ENV\" = \"development\" ]; then npm run dev; else node dist/server.js; fi"

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=subway_system
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d subway_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  test_db:
    image: postgres:13
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=subway_system_test
    ports:
      - "5433:5432"
    volumes:
      - ./src/db/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  postgres_data: